openapi: 3.0.0
info:
  title: eng-registry-api
  version: '1.0'
  description: "API OpenAPI 3 del servizio di eng-registry.\nQuesto file è generato con Stoplight, e inizialmente si trova in C:\\Users\\.....\\Documents\\Stoplight Studio\\eng-registry\\reference\\eng-registry-api.v1.yaml\n"
servers:
  - url: 'http://localhost:1110'
  - url: 'https://localhost:1120'
    description: ''
paths:
  /test:
    get:
      summary: Test connection
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
      operationId: test
      description: 'chiamata semplice, senza security, per verificare la connessione etc...'
  /me:
    get:
      summary: Get user info
      tags: []
      responses: {}
      operationId: getUsrInfo
      description: ritorna le info del chiamante (identificato da token di autenticazione). Necessita di autenticazione
  '/service/config/{serviceName}':
    parameters:
      - schema:
          type: string
        name: serviceName
        in: path
        required: true
    get:
      summary: Service config
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties: {}
      operationId: getServCfg
      description: "Legge la configurazione di un servizio. Potrebbero essere info sensibili come pwd di DB etc..\nBisognerà capire come blindare "
    put:
      summary: Put service config
      operationId: putServCfg
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties: {}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties: {}
        description: "contenuto libero, verrà restituito cosi com'è dalla GET"
      description: scrive il config di un service. Non è detto che serva. Per un utente sys admin. Blindare
  '/service/endpoint/{serviceName}':
    parameters:
      - schema:
          type: string
        name: serviceName
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
      operationId: getServEndpoint
      description: Legge gli endpoints correnti di un servizio. Gli endpoints expred non voengono restituiti. Restituisce un array JSON di url
    post:
      summary: Post service endpoint
      operationId: postServEndpoint
      responses:
        '200':
          description: OK
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                url:
                  type: string
                expire:
                  type: number
        description: url e expire (ms since 1/1/1970)
      description: A carico del service. Registra un endpoint di un servizio con expire. Blindare
  '/app/config/{appName}':
    parameters:
      - schema:
          type: string
        name: appName
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties: {}
      operationId: getAppCfg
      description: "legge la configurazione di un app. Probabilmente meno critica di getServCfg. Deve essere chiamabile anche prima che l'utente si sia autenticato all'app"
    put:
      summary: ''
      operationId: putAppCfg
      responses:
        '200':
          description: OK
      description: 'Inserisce il config di un app. Non indispensabile perchè il db delle cfg no potrebbe essere alimentato a mano. Destinata a sys admin, blindare.'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties: {}
        description: Qualunque info
  /all:
    get:
      summary: Collect all info for administration
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties: {}
      operationId: getAll
      description: 'Ritorna un descrittore complessivo, per debug o dump. Destinata a sys adm, blindare.'
components:
  schemas: {}
