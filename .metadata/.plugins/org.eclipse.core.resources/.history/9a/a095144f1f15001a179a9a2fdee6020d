package it.eng.model;
import java.util.HashMap;
import java.util.Map;

import com.fasterxml.jackson.databind.deser.std.MapDeserializer;

import it.eng.model.schema.Schema;


public class SwaggerModel {
	public String openapi = "3.0.1";
	public Info info;
	public Server servers[];
	public Map<String, Path> paths;
	public Components components;
	
	public SwaggerModel(Info info, Server servers[], PathEntry paths[]) {
		this.info = info;
		this.paths = paths;
		//this.components = components;
		
	}

	
	public static class Info {
		public String title = "a service";
		public String description = "A swagger model";
		public String version = "1.0.0";
		
		public Info(String title, String description, String version) {
			this.title = title;
			this.description = description;
			this.version = version;
		}
		
	}
	public static class Server {
		public String url;
		public Server(String url) {
			this.url = url;
		}
	}
	
	public static abstract class Path extends HashMap<String, Method> {	
		public Path(PathEntry[] entries) {
			super();
			for(PathEntry entry: entries) {
				put(entry.pattern, entry.path);
			}
		}
	}
	
	
	public static class PathEntry {
		public String pattern;
		public MethodEntry methods[];
	}
	
	public static class Method {
		
	}
	
	public static class MethodEntry {
		public String methodName;
		public Method method;
	}
	
	public static class Components {
		public Map<String, Schema> schemas;
		
		public Components(NamedSchema schemas[]) {
			this.schemas = new HashMap<String, Schema>();
			for(NamedSchema ns: schemas) {
				this.schemas.put(ns.name, ns.schema);
			}
		}
	}
	
	public static class NamedSchema {
		public String name;
		public Schema schema;
		public NamedSchema(String name, Schema schema) {
			this.name = name;
			this.schema=schema;
		}
	}

}
